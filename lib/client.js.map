{"version":3,"sources":["client.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGM,MAAM;YAAN,MAAM;;AACV,WADI,MAAM,GACI;0BADV,MAAM;;uEAAN,MAAM;;AAGR,UAAK,IAAI,GAAG,SAAS,CAAA;;GACtB;;eAJG,MAAM;;yBAML,OAAO,EAAe;UAAb,EAAE,yDAAG,UAAA,CAAC;eAAI,CAAC;OAAA;;AACvB,UAAM,UAAU,8BAPd,MAAM,qCAOuB,CAAA;AAC/B,UAAI,MAAM,GAAG,IAAI,cAAI,MAAM,EAAE,CAAA;;AAE7B,YAAM,CAAC,OAAO,MAAA,CAAd,MAAM,qBAAY,IAAI,CAAC,IAAI,UAAE,YAAM;AACjC,cAAM,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAA;OAClC,GAAC,CAAA;;AAEF,YAAM,CAAC,EAAE,CAAC,MAAM,EAAE,UAAA,IAAI,EAAI;AACxB,UAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;OACpB,CAAC,CAAA;KACH;;;SAjBG,MAAM;;;kBAoBG,MAAM","file":"client.js","sourcesContent":["import net         from 'net'\nimport Middleware  from 'frp-middleware'\n\nclass Client extends Middleware {\n  constructor() {\n    super()\n    this.args = arguments\n  }\n\n  emit(message, fn = x => x) {\n    const middleware = super.emit()\n    var socket = new net.Socket()\n\n    socket.connect(...this.args, () => {\n      socket.write(middleware(message))\n    })\n\n    socket.on('data', data => {\n      fn(data.toString())\n    })\n  }\n}\n\nexport default Client\n"],"sourceRoot":"/source/"}